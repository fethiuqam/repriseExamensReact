stages:
  - build
  - deploy

cache:
  - key: "$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository
      - target/node
      - frontend/node_modules

verify:
  variables:
    MAVEN_OPTS: >-
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    MAVEN_CLI_OPTS: "--batch-mode --errors --show-version"
  image: maven:3.8.5-openjdk-17
  stage: build
  script:
    - "mvn $MAVEN_CLI_OPTS verify"
  artifacts:
    paths:
      - target/*.jar
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - frontend/junit.xml

.deploy: &deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SERVER_SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER_IP_ADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  stage: deploy
  tags:
    - dind
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.deploy_app: &deploy_app
  <<: *deploy
  script:
    - docker login --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "APP_IMAGE_TAG=$CI_REGISTRY_IMAGE/app:$ENV_TAG"  >> .env
    - echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
    - echo "HOST_PORT=$HOST_PORT" >> .env
    - docker-compose build
    - docker-compose push
    - docker-compose --host "ssh://$SERVER_GITLAB_USER@$SERVER_IP_ADDRESS" --project-name $ENV_TAG pull
    - docker-compose --host "ssh://$SERVER_GITLAB_USER@$SERVER_IP_ADDRESS" --project-name $ENV_TAG up --detach

deploy_test:
  <<: *deploy_app
  environment:
    name: test
    url: https://test.repriseexamen.info.uqam.ca
  variables:
    ENV_TAG: test
    HOST_PORT: 8080

deploy_prod:
  <<: *deploy_app
  environment:
    name: prod
    url: https://repriseexamen.info.uqam.ca
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    ENV_TAG: prod
    HOST_PORT: 8081

deploy_proxy:
  <<: *deploy
  script:
    - docker login --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd ./nginx
    - echo "NGINX_IMAGE_TAG=$CI_REGISTRY_IMAGE/nginx" >> .env
    - docker-compose build
    - docker-compose push
    - docker-compose --host "ssh://$SERVER_GITLAB_USER@$SERVER_IP_ADDRESS" pull
    - docker-compose --host "ssh://$SERVER_GITLAB_USER@$SERVER_IP_ADDRESS" up --detach
